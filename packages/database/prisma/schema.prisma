generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  gw2meUserId   String  @unique
  name          String
  email         String
  emailVerified Boolean

  sessions Session[]

  projects ProjectMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuthRequest {
  id String @id @default(uuid())

  code_verifier String

  createdAt DateTime @default(now())
}

model Session {
  id String @id @default(uuid())

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  usedAt    DateTime @default(now())
}

model Project {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members ProjectMember[]
}

model ProjectMember {
  projectId String
  userId    String

  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  type ProjectMemberType

  @@id([projectId, userId])
}

enum ProjectMemberType {
  Owner
  Member
}
