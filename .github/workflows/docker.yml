name: Build Docker images
on:
  workflow_call:

env:
  IMAGE_VERSION: ci-run-${{ github.run_id }}

jobs:
  build-docker:
    name: "Build: ${{ matrix.target }}"
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target: [ web, database-migration ]
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build the Docker image
      uses: docker/bake-action@v6.5.0
      with:
        files: ./compose.yml
        targets: ${{ matrix.target }}
        set: |
          ${{ matrix.target }}.output=type=image,push=true
          *.platform=linux/amd64,linux/arm64
          *.cache-from=type=gha,scope=build-${{ matrix.target }}
          *.cache-to=type=gha,scope=build-${{ matrix.target }},mode=max

  test-compose:
    name: "Test: docker compose"
    runs-on: ubuntu-24.04
    needs: build-docker
    steps:
    - uses: actions/checkout@v4
    - name: Pull images
      run: docker compose pull
    - run: docker images
    - name: Start docker compose
      run: docker compose up -d
    - name: Wait 15s
      run: sleep 15
    - run: docker compose ps -a
    - run: docker compose logs
    - name: Verify docker containers are running
      run: docker inspect --format "{{.ID}} {{.Name}} {{.State.Status}} {{.RestartCount}}" $(docker compose ps -aq) | node .github/actions/docker-compose-status.js
    - name: Stop docker compose
      run: docker compose down

  test-kubernetes:
    name: "Test: kubernetes"
    runs-on: ubuntu-24.04
    needs: build-docker
    steps:
    - uses: actions/checkout@v4
    - uses: nolar/setup-k3d-k3s@v1
      with:
        version: v1.26
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: build temporary kustomization.yaml
      run: |
        mkdir -p .temp
        cat <<EOF > .temp/kustomization.yaml
        resources:
        - ../kubernetes/local
        images:
        - name: ghcr.io/darthmaim/gw2boost.com/web
          newTag: ${{ env.IMAGE_VERSION }}
        - name: ghcr.io/darthmaim/gw2boost.com/database-migration
          newTag: ${{ env.IMAGE_VERSION }}
        EOF
    - run: kubectl kustomize .temp
    - run: kubectl apply -k .temp
    - run: kubectl rollout status deployment web database-pg17 -n gw2boost --timeout=120s
    - run: kubectl get deployment -n gw2boost
      if: success() || failure()
    - run: kubectl get job -n gw2boost
      if: success() || failure()
    - run: kubectl logs -l app.kubernetes.io/part-of=gw2boost -n gw2boost --all-containers --ignore-errors
      if: failure() || runner.debug == '1'
