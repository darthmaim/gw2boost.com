name: Release
on:
  workflow_call:

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    outputs:
      published: ${{ steps.changeset.outputs.published }}
      dockerMatrix: ${{ steps.docker-matrix.outputs.dockerMatrix }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js env
      uses: ./.github/actions/setup-node-env
      with:
        cache-key: false

    - name: Create Release Pull Request
      id: changeset
      uses: changesets/action@v1.4.9
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        title: New Release
        commit: Create new release

    - name: Build docker release matrix
      id: docker-matrix
      run: |
        dockerMatrix=$(jq '{ include: [.[] | select(.name as $name | ["web", "database-migration"] | index($name))] }' <<< '${{ steps.changeset.outputs.publishedPackages }}')
        echo "dockerMatrix=${dockerMatrix}" >> $GITHUB_OUTPUT

  release-docker:
    name: "Docker: ${{ matrix.name }}"
    needs: [release]
    if: needs.release.outputs.published
    strategy:
      matrix: ${{ fromJson(needs.release.outputs.dockerMatrix) }}
    runs-on: ubuntu-24.04
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Tag image version
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/${{ matrix.name }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        CI_TAG=ci-run-${{ github.run_id }}
        docker buildx imagetools create $IMAGE_ID:$CI_TAG --tag $IMAGE_ID:${{ matrix.version }}
